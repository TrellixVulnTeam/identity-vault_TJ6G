{"version":3,"mappings":"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","names":["createCapacitorPlatforms","win","defaultPlatformMap","Map","set","name","capPlatforms","CapacitorPlatforms","currentPlatform","platforms","addPlatform","platform","setPlatform","has","get","initPlatforms","globalThis","self","window","global","legacyRegisterWebPlugin","cap","webPlugin","_a","config","Plugins","Error","console","warn","includes","getPlatform","ExceptionCode","CapacitorException","constructor","message","code","getPlatformId","_b","androidBridge","webkit","messageHandlers","bridge","createCapacitor","_c","_d","_e","capCustomPlatform","CapacitorCustomPlatform","Capacitor","defaultGetPlatform","defaultIsNativePlatform","isNativePlatform","defaultIsPluginAvailable","pluginName","plugin","registeredPlugins","getPluginHeader","isPluginAvailable","defaultGetPluginHeader","PluginHeaders","find","h","handleError","err","error","pluginMethodNoop","_target","prop","Promise","reject","defaultRegisterPlugin","jsImplementations","registeredPlugin","proxy","pluginHeader","jsImplementation","loadPluginImplementation","createPluginMethod","impl","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","bind","Unimplemented","createPluginMethodWrapper","remove","wrapper","args","p","then","fn","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","resolve","Proxy","_","undefined","Set","keys","registerPlugin","convertFileSrc","filePath","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","registerWebPlugin","WebPlugin","listeners","windowListeners","listenerFunc","push","windowListener","registered","addWindowListener","_this","removeAllListeners","_this2","listener","removeWindowListener","notifyListeners","data","forEach","hasListeners","length","registerWindowListener","windowEventName","pluginEventName","handler","event","unimplemented","msg","unavailable","Unavailable","_this3","index","indexOf","splice","handle","addEventListener","removeEventListener","WebView","VaultErrorCodes","SupportedBiometricType","BiometricSecurityStrength","DeviceSecurityType","VaultType","AndroidBiometricCryptoPreference","AuthMode","__rest","s","e","t","prototype","hasOwnProperty","getOwnPropertySymbols","i","propertyIsEnumerable","STORAGE_KEYS","DATA","BrowserVault","isVaultLocked","assign","deviceSecurityType","androidBiometricsPreferStrongVaultOrSystemPasscode","shouldClearVaultAfterTooManyFailedAttempts","customPasscodeInvalidUnlockAttempts","unlockVaultOnLoad","doesVaultExist","getDataObj","clear","unlockIfLocked","sessionStorage","removeItem","getKey","exportVault","importVault","setDataObj","isLocked","getKeys","getValue","key","lock","lockCallback","removeValue","dataAfterRemoval","setCustomPasscode","passcode","setValue","onConfigChanged","configCallback","onError","errorCallback","onLock","onPasscodeRequested","onUnlock","unlockCallback","unlock","updateConfig","requestBiometricPrompt","getItem","JSON","parse","Unknown","dataStr","stringify","setItem","Vault","defaultConfig","None","StrongVault","type","DeviceSecurity","Both","resume","setup","getPersistedVaultConfig","cordova","exec","jsonData","jsonValue","passCodeRequestedCallback","retryFunc","MissingPasscode","extra","isPasscodeSetRequest","MissingBiometrics","noop","document","vaultConfig","Device","Weak","enabled","log","IonicIdentityVaultUser","descriptor","_readyCalled","username","vaultId","_readyPromise","initializeVault","session","token","_config","authMode","bioEnabled","isBiometricsEnabled","passEnabled","isPasscodeEnabled","secureStorageMode","isSecureStorageModeEnabled","SecureStorage","BiometricAndPasscode","BiometricOnly","PasscodeOnly","InMemoryOnly","isPasscodeSetupNeeded","lockAfter","hideScreenOnBackground","onVaultLocked","_event","onSessionRestoreError","_err","onUnlockOnReadyError","onVaultUnlocked","onVaultReady","onSetupError","_error","onConfigChange","onSessionRestored","_session","onPasscodeRequest","_isPasscodeSetRequest","onReady","vault","isInUse","inUse","locked","restoreSessionOnReady","_restoreSession","restoreSessionError","unlockOnReady","_unlock","unlockOnReadyError","_trySetAuthMode","_readyResolve","ready","_readyReject","onConfig","_this4","_this5","BiometricOrPasscode","unlockWithPasscode","handleableErrors","AuthFailed","BiometricsNotEnabled","UserCanceledInteraction","InvalidatedCredential","restoreSession","saveSession","_this6","_this7","_setPasscode","_this8","VaultLocked","setPasscode","_this9","getSession","_this10","unlockOnAccess","_this11","_this12","_this13","storeValue","SecurityNotAvailable","getAuthMode","setAuthMode","login","_this14","logout","getVault","_this15","_this16","vIonicNativeAuth","getPlugin","readyPromise","allowSystemPinFallback","androidPromptNegativeButtonText","androidPromptTitle","androidPromptSubtitle","androidPromptDescription","iosPromptText","IonicNativeAuth","getBiometricType","_this17","getAvailableHardware","_this18","lockOut","_this19","_this20","getConfig","hasStoredSession","_this21","setBiometricsEnabled","_this22","_setBiometricsEnabled","_this23","setHideScreenOnBackground","_this24","setPasscodeEnabled","_this25","_setPasscodeEnabled","_this26","_this27","isBiometricsAvailable","_this28","isBiometricsSupported","_this29","_this30","_this31","_setAuthMode","_this32","setSecureStorageModeEnabled","InvalidAuthMode","_this33","_this34","_this35","MigratorVault","instance","VaultMigrator","migratorSession","getInstance","_this36","vaultData","keyValue","_this37","routes","path","component","_home_page__WEBPACK_IMPORTED_MODULE_0__","HomePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","HomePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_home_routing_module__WEBPACK_IMPORTED_MODULE_1__","declarations","HomePage","vaultService","state","setSession","lockVault","unlockVault","setLockType","setPrivacyScreen","privacyScreen","clearVault","_vault_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","_ionic_enterprise_identity_vault__WEBPACK_IMPORTED_MODULE_1__","lockAfterBackgrounded","iosBiometricsLocalizedFallbackTitle","VaultService","ngZone","lockType","canUseBiometrics","canUseBoth","canUsePasscode","vaultExists","run","init","_capacitor_core__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","providedIn","__webpack_exports__"],"sources":["webpack:///node_modules/@capacitor/core/dist/index.js","webpack:///node_modules/@ionic-enterprise/identity-vault/dist/index.js","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home.page.ts","webpack:///src/app/vault.service.ts","webpack:///src/app/home/home.page.html"],"sourcesContent":["/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst setPlatform = CapacitorPlatforms.setPlatform;\n\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n\nvar ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\nconst getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n\nconst createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    /**\n     * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n     */\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => {\n        return capCustomPlatform !== null\n            ? capCustomPlatform.name\n            : getPlatformId(win);\n    };\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatform() !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null &&\n                !jsImplementation &&\n                'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair ✨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nconst initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n\nconst Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n\nconst WebView = /*#__PURE__*/ registerPlugin('WebView');\n\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };\n","/*! Ionic Enterprise Identity Vault: https://ionicframework.com/ - Commercially Licensed */\n/**\n * The meaning of the error code in the thrown {@link VaultError}.\n */\nvar VaultErrorCodes;\n(function (VaultErrorCodes) {\n    /**\n     * An unknown error happened.\n     * @constant `0`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * The operation failed because the vault was locked.\n     * @constant `1`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"VaultLocked\"] = 1] = \"VaultLocked\";\n    /**\n     * The operation failed because the vault was unavailable.\n     * The most likely cause of this error is that a vault has not been configured.\n     * @constant `2`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"VaultUnavailable\"] = 2] = \"VaultUnavailable\";\n    /**\n     * The operation failed because the some of the vault provided arguments were invalid.\n     * @constant `3`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"InvalidArguments\"] = 3] = \"InvalidArguments\";\n    /**\n     * The credentials were invalidated. This can happen when a user changes biometrics or passcode.\n     * @constant `4`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"InvalidatedCredential\"] = 4] = \"InvalidatedCredential\";\n    /**\n     * Biometric security is unavailable due to a passcode not being set up at the system level.\n     * In order to use biometric identification on the device a system level passcode must be set up by the user.\n     * @constant `5`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"SecurityNotAvailable\"] = 5] = \"SecurityNotAvailable\";\n    /**\n     * User authentication failed.\n     * @constant `6`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"AuthFailed\"] = 6] = \"AuthFailed\";\n    /**\n     * Too many failed authentication attempts made against the custom passcode vault, so the vault was cleared and user will need to login again.\n     * @constant `7`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"TooManyFailedAttempts\"] = 7] = \"TooManyFailedAttempts\";\n    /**\n     * The user cancelled the native authentication dialog.\n     *\n     * **Note**: On iOS, this error code will also be thrown in the event that the native authentication dialog fails as a result of too many failed attempts.\n     * The user will be forced to cancel the dialog, triggering this error code.\n     *\n     * On Android, this error also will be thrown if using {@link DeviceSecurityType.SystemPasscode} or {@link DeviceSecurityType.Both} in the event of too many failed attempts.\n     * Its currently not possible to get the nature of failures from the native authentication dialog, and similar to iOS, the user will be forced to cancel the dialog, triggering this error code.\n     * @constant `8`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"UserCanceledInteraction\"] = 8] = \"UserCanceledInteraction\";\n    /**\n     * The user provided mismatched passcodes.\n     * @constant `9`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"MismatchedPasscode\"] = 9] = \"MismatchedPasscode\";\n    /**\n     * The operation requires passcode to be setup but it isn't set yet. Call {@link Vault.setCustomPasscode} to set it.\n     * @constant `10`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"MissingPasscode\"] = 10] = \"MissingPasscode\";\n    /**\n     * The operation failed because the application tried to unlock the vault with passcode authentication,\n     * but the vault is not configured to allow passcode authentication.\n     * @constant `11`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"PasscodeNotEnabled\"] = 11] = \"PasscodeNotEnabled\";\n    /**\n     * The key was not found. This can happen when a user changes biometrics or passcode.\n     * @constant `12`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"KeyNotFound\"] = 12] = \"KeyNotFound\";\n    /**\n     * The operation failed because biometric authentication is not enabled.\n     * This can occur when biometrics is not supported by the device\n     * or when biometrics has not been configured for the device or vault.\n     * @constant `13`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"BiometricsNotEnabled\"] = 13] = \"BiometricsNotEnabled\";\n    /**\n     * @ignore\n     */\n    VaultErrorCodes[VaultErrorCodes[\"InvalidAuthMode\"] = 14] = \"InvalidAuthMode\";\n    /**\n     * Biometrics have not been authed yet (Android only)\n     * @constant `15`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"MissingBiometrics\"] = 15] = \"MissingBiometrics\";\n    /**\n     * {@link DeviceSecurityType.SystemPasscode} for {@link DeviceSecurityType} not available on this Android device.\n     * @constant `16`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"AndroidSystemPasscodeUnavailable\"] = 16] = \"AndroidSystemPasscodeUnavailable\";\n    /**\n     * Biometrics have been locked out, usually because of too many failed attempts.\n     *\n     * **Note:** This error will never be thrown if using {@link DeviceSecurityType.SystemPasscode} or {@link DeviceSecurityType.Both}.\n     * Its currently not possible to get the nature of failures from the native authentication dialog, so the only error that would be thrown is {@link VaultErrorCodes.UserCanceledInteraction} as the user\n     * is forced to cancel the prompt.\n     *\n     * @constant `17`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"AndroidBiometricsLockedOut\"] = 17] = \"AndroidBiometricsLockedOut\";\n    /**\n     * Biometrics have been locked out, usually because of too many failed attempts.\n     *\n     * @constant `18`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"iOSBiometricsLockedOut\"] = 18] = \"iOSBiometricsLockedOut\";\n    /**\n     * An unexpected error has occurred in the Android keystore.\n     *\n     * @constant `19`\n     */\n    VaultErrorCodes[VaultErrorCodes[\"AndroidUnexpectedKeystoreError\"] = 19] = \"AndroidUnexpectedKeystoreError\";\n})(VaultErrorCodes || (VaultErrorCodes = {}));\n/**\n * The possible values returned by {@link Device.getAvailableHardware}\n */\nvar SupportedBiometricType;\n(function (SupportedBiometricType) {\n    /** The device supports fingerprint scanning. */\n    SupportedBiometricType[\"Fingerprint\"] = \"fingerprint\";\n    /** The device supports facial recognition. */\n    SupportedBiometricType[\"Face\"] = \"face\";\n    /** The device supports iris scanning. */\n    SupportedBiometricType[\"Iris\"] = \"iris\";\n})(SupportedBiometricType || (SupportedBiometricType = {}));\n/**\n * Possible device biometric strength levels on Android (always `strong` on iOS).\n * [More Information](https://source.android.com/security/biometric/measure#tiered-authentication).\n */\nvar BiometricSecurityStrength;\n(function (BiometricSecurityStrength) {\n    /** Refers to Class 2 - Weak biometric security */\n    BiometricSecurityStrength[\"Weak\"] = \"weak\";\n    /** Refers to Class 3 - Strong biometric security */\n    BiometricSecurityStrength[\"Strong\"] = \"strong\";\n})(BiometricSecurityStrength || (BiometricSecurityStrength = {}));\n/**\n * When type is set to 'DeviceSecurity', determines which aspects of the device to use to secure the vault.\n * Note: Android only supports `SystemPasscode` on Android 11 and greater.\n * @default `Both`\n */\nvar DeviceSecurityType;\n(function (DeviceSecurityType) {\n    /** Will allow a system passcode to secure the vault. On Android, only supported on Android 11 and greater. */\n    DeviceSecurityType[\"SystemPasscode\"] = \"SystemPasscode\";\n    /** WIll allow biometric hardware tos secure the vault. */\n    DeviceSecurityType[\"Biometrics\"] = \"Biometrics\";\n    /** WIll allow both SystemPasscode or Biometrics as an option to secure the vault. */\n    DeviceSecurityType[\"Both\"] = \"Both\";\n    /** No biometric security option will be used. */\n    DeviceSecurityType[\"None\"] = \"None\";\n})(DeviceSecurityType || (DeviceSecurityType = {}));\n/**\n * The type of vault\n */\nvar VaultType;\n(function (VaultType) {\n    /** No additional security is required in the app as long as the device was unlocked with a secure method. */\n    VaultType[\"SecureStorage\"] = \"SecureStorage\";\n    /** Uses additional device features to add an additional layer of security while the user is in the app. */\n    VaultType[\"DeviceSecurity\"] = \"DeviceSecurity\";\n    /** User will set a custom passcode that will be used to access the vault. */\n    VaultType[\"CustomPasscode\"] = \"CustomPasscode\";\n    /** Data will persist only while the application is in memory. */\n    VaultType[\"InMemory\"] = \"InMemory\";\n})(VaultType || (VaultType = {}));\n/**\n * For Android, when type is {@link VaultType.DeviceSecurity} and deviceSecurityType is {@link DeviceSecurityType.Both}, this options specifies if you want to\n * prefer a Strong Cryptographic Vault or the System Passcode fallback when they both aren't available.\n * @default `StrongVault`\n */\nvar AndroidBiometricCryptoPreference;\n(function (AndroidBiometricCryptoPreference) {\n    /** Prefer to use a strong cryptographic vault. */\n    AndroidBiometricCryptoPreference[\"StrongVault\"] = \"StrongVault\";\n    /** Prefer the system passcode fallback. */\n    AndroidBiometricCryptoPreference[\"SystemPasscode\"] = \"SystemPasscode\";\n})(AndroidBiometricCryptoPreference || (AndroidBiometricCryptoPreference = {}));\n// OLD METHODS\n/**\n * The type of authentication the vault should be configured to allow.\n * @deprecated For use in legacy Vault Migrator only.\n * @ignore\n */\nvar AuthMode;\n(function (AuthMode) {\n    /**\n     * Biometrics authentication should only be allowed\n     */\n    AuthMode[AuthMode[\"BiometricOnly\"] = 0] = \"BiometricOnly\";\n    /**\n     * Passcode authentication should only be allowed\n     */\n    AuthMode[AuthMode[\"PasscodeOnly\"] = 1] = \"PasscodeOnly\";\n    /**\n     * Both biometric and passcode authentication should be allowed\n     */\n    AuthMode[AuthMode[\"BiometricAndPasscode\"] = 2] = \"BiometricAndPasscode\";\n    /**\n     * Both biometric and passcode authentication should be disabled.\n     * With this setting all data in the vault will be cleared on lock or\n     * if the app is closed. Stored data is kept only in memory.\n     */\n    AuthMode[AuthMode[\"InMemoryOnly\"] = 3] = \"InMemoryOnly\";\n    /**\n     * Use biometrics if it is available, otherwise use passcode\n     */\n    AuthMode[AuthMode[\"BiometricOrPasscode\"] = 4] = \"BiometricOrPasscode\";\n    /**\n     * Both biometric and passcode authentication will be disabled but any stored values\n     * will persist and be stored securely at rest using the keychain and will be available\n     * without needing to authenticate via passcode or biometrics when the device is unlocked.\n     */\n    AuthMode[AuthMode[\"SecureStorage\"] = 5] = \"SecureStorage\";\n})(AuthMode || (AuthMode = {}));\n\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n}\n\nconst STORAGE_KEYS = {\n    DATA: \"data\",\n};\n/**\n * THIS VAULT DOES NOT IMPLEMENT SECURE STORAGE IN THE BROWSER. It only exists\n * as a way to run browser-compatible code in place of Identity Vault. Browsers\n * do not have a secure storage element same as native devices. This class\n * is intended to be used to enable running your application in the browser while\n * simulating the functions of Identity Vault using sessionStorage.\n *\n * Represents a vault implementation for browser compatibility.\n */\nclass BrowserVault {\n    /**\n     * @usage\n     * ```typescript\n     * const vault = new Vault({\n     *  key: 'com.company.myvaultapp',\n     *  type: 'CustomPasscode',\n     *  deviceSecurityType: 'Both',\n     *  lockAfterBackgrounded: 2000,\n     * });\n     * ```\n     * @param config\n     */\n    constructor(config) {\n        /** @ignore */\n        this.isVaultLocked = false;\n        console.warn(\"THIS VAULT DOES NOT IMPLEMENT SECURE STORAGE IN THE BROWSER AND IS NOT INTENDED FOR PRODUCTION USE. It only exists as a way to run browser-compatible code in place of Identity Vault. Browsers do not have a secure storage element same as native devices. This class is intended to be used to enable running your application in the browser while simulating the functions of Identity Vault using sessionStorage.\");\n        this.config = Object.assign({\n            deviceSecurityType: \"Both\",\n            androidBiometricsPreferStrongVaultOrSystemPasscode: \"StrongVault\",\n            shouldClearVaultAfterTooManyFailedAttempts: false,\n            customPasscodeInvalidUnlockAttempts: 5,\n            unlockVaultOnLoad: false,\n        }, config);\n        this.isVaultLocked = config.unlockVaultOnLoad ? false : true;\n    }\n    /** See {@link Vault.doesVaultExist} */\n    doesVaultExist() {\n        const data = this.getDataObj();\n        return Promise.resolve(!!data);\n    }\n    /** See {@link Vault.clear} */\n    clear() {\n        this.unlockIfLocked();\n        sessionStorage.removeItem(this.getKey(STORAGE_KEYS.DATA));\n        return Promise.resolve();\n    }\n    /** See {@link Vault.exportVault} */\n    exportVault() {\n        this.unlockIfLocked();\n        const data = this.getDataObj();\n        return Promise.resolve(data !== null && data !== void 0 ? data : {});\n    }\n    /** See {@link Vault.importVault} */\n    importVault(data) {\n        this.setDataObj(data);\n        return Promise.resolve();\n    }\n    /** See {@link Vault.isLocked} */\n    isLocked() {\n        return Promise.resolve(this.isVaultLocked);\n    }\n    /** See {@link Vault.getKeys} */\n    getKeys() {\n        this.unlockIfLocked();\n        const data = this.getDataObj();\n        if (!data)\n            return Promise.resolve([]);\n        return Promise.resolve(Object.keys(data));\n    }\n    /** See {@link Vault.getValue} */\n    getValue(key) {\n        var _a;\n        this.unlockIfLocked();\n        const data = this.getDataObj();\n        return Promise.resolve((_a = data === null || data === void 0 ? void 0 : data[key]) !== null && _a !== void 0 ? _a : null);\n    }\n    /** See {@link Vault.lock} */\n    lock() {\n        var _a;\n        (_a = this.lockCallback) === null || _a === void 0 ? void 0 : _a.call(this);\n        return Promise.resolve();\n    }\n    /** See {@link Vault.removeValue} */\n    removeValue(key) {\n        this.unlockIfLocked();\n        const data = this.getDataObj();\n        if (!data)\n            return Promise.resolve();\n        const _a = data, _b = key; _a[_b]; const dataAfterRemoval = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n        this.setDataObj(dataAfterRemoval);\n        return Promise.resolve();\n    }\n    /** See {@link Vault.setCustomPasscode} */\n    setCustomPasscode(passcode) {\n        return Promise.resolve();\n    }\n    /** See {@link Vault.setValue} */\n    setValue(key, value) {\n        this.unlockIfLocked();\n        const data = this.getDataObj();\n        if (!data) {\n            this.setDataObj({ [key]: value });\n        }\n        else {\n            this.setDataObj(Object.assign(Object.assign({}, data), { [key]: value }));\n        }\n        return Promise.resolve();\n    }\n    /** See {@link Vault.onConfigChanged} */\n    onConfigChanged(callback) {\n        this.configCallback = callback;\n    }\n    /** See {@link Vault.onError} */\n    onError(callback) {\n        this.errorCallback = callback;\n    }\n    /** See {@link Vault.onLock} */\n    onLock(callback) {\n        this.lockCallback = callback;\n    }\n    /** See {@link Vault.onPasscodeRequested} */\n    onPasscodeRequested(callback) {\n        // No passcode support\n    }\n    /** See {@link Vault.onUnlock} */\n    onUnlock(callback) {\n        this.unlockCallback = callback;\n    }\n    /** See {@link Vault.unlock} */\n    unlock() {\n        var _a;\n        (_a = this.unlockCallback) === null || _a === void 0 ? void 0 : _a.call(this);\n        return Promise.resolve();\n    }\n    /** See {@link Vault.updateConfig} */\n    updateConfig(config) {\n        var _a;\n        this.config = config;\n        (_a = this.configCallback) === null || _a === void 0 ? void 0 : _a.call(this, config);\n        return Promise.resolve();\n    }\n    /** @ignore */\n    requestBiometricPrompt() {\n        this.unlockIfLocked();\n        return Promise.resolve(true);\n    }\n    /** @ignore */\n    unlockIfLocked() {\n        if (this.isVaultLocked) {\n            this.unlock();\n        }\n    }\n    /** @ignore */\n    getDataObj() {\n        var _a;\n        const value = sessionStorage.getItem(this.getKey(STORAGE_KEYS.DATA));\n        if (!value)\n            return null;\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            (_a = this.errorCallback) === null || _a === void 0 ? void 0 : _a.call(this, {\n                message: \"Unable to parse data store\",\n                code: VaultErrorCodes.Unknown,\n            });\n            return null;\n        }\n    }\n    /** @ignore */\n    setDataObj(data) {\n        var _a;\n        try {\n            const dataStr = JSON.stringify(data);\n            sessionStorage.setItem(this.getKey(STORAGE_KEYS.DATA), dataStr);\n        }\n        catch (e) {\n            (_a = this.errorCallback) === null || _a === void 0 ? void 0 : _a.call(this, {\n                message: \"Unable to serialize data\",\n                code: VaultErrorCodes.Unknown,\n            });\n        }\n    }\n    /** @ignore */\n    getKey(key) {\n        return `IV-${this.config.key}-${key}`;\n    }\n}\n\n/**\n * Represents a vault for secure value storage\n */\nclass Vault {\n    /**\n     * @usage\n     * ```typescript\n     * const vault = new Vault({\n     *  key: 'com.company.myvaultapp',\n     *  type: 'CustomPasscode',\n     *  deviceSecurityType: DeviceSecurityType.None,\n     *  lockAfterBackgrounded: 2000,\n     * });\n     * ```\n     * @param config\n     */\n    constructor(config) {\n        /** @ignore */\n        this.defaultConfig = {\n            deviceSecurityType: DeviceSecurityType.None,\n            androidBiometricsPreferStrongVaultOrSystemPasscode: AndroidBiometricCryptoPreference.StrongVault,\n            shouldClearVaultAfterTooManyFailedAttempts: false,\n            customPasscodeInvalidUnlockAttempts: 5,\n            unlockVaultOnLoad: false,\n        };\n        // set defaults\n        this.config = Object.assign(this.defaultConfig, config);\n        // setting sane defaults\n        if (config.deviceSecurityType === DeviceSecurityType.None &&\n            config.type === VaultType.DeviceSecurity) {\n            config.deviceSecurityType = DeviceSecurityType.Both;\n        }\n        this.resume = this.resume.bind(this);\n        this.handleError = this.handleError.bind(this);\n        this.setup().then(() => {\n            this.getPersistedVaultConfig();\n        });\n    }\n    /**\n     * Resolves true if a vault with the same key already exists, and false if not.\n     * The vault does not need to be unlocked to check.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * const vaultExists = await vault.doesVaultExists()\n     * if (!vaultExists) {\n     *  // the vault does not exist...\n     * }\n     * ```\n     */\n    doesVaultExist() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.doesVaultExist());\n            }, \"VaultPlugin\", \"doesVaultExist\", [this.config]);\n        });\n    }\n    /**\n     * Clears out the current vault and removes it from the system.\n     * Note: The vault does not need to be unlocked in order to clear it. No credentials are checked\n     * when clearing the vault.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * await vault.clear();\n     * ```\n     */\n    clear() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                resolve();\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.clear());\n            }, \"VaultPlugin\", \"clear\", [this.config]);\n        });\n    }\n    /**\n     * Exports the data of the current vault in its entirety.\n     * The data is a map with keys that are strings and values that are JSON.\n     * Calling `exportVault` will attempt to unlock the vault if it is currently locked.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * const data = await vault.exportVault();\n     * ```\n     *\n     * @return The resolved object is a map with string keys and string values.\n     *\n     */\n    exportVault() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.exportVault());\n            }, \"VaultPlugin\", \"exportVault\", [this.config]);\n        });\n    }\n    /**\n     * Imports data into the vault, replacing the current contents of the vault.\n     * The data is a map with keys that are strings and values that are JSON.\n     * Calling `importVault` will attempt to unlock the vault if it is currently locked.\n     *\n     * @usage\n     * ```typescript\n     * const dataFromElsewhere = await getUserData();\n     * const newVault = new Vault(vaultConfig);\n     * await newVault.importVault(dataFromElsewhere);\n     * ```\n     *\n     * @param data The entire data object to be imported. The shape of data must be {[key: string]: string}.\n     *\n     */\n    importVault(data) {\n        const jsonData = JSON.stringify(data);\n        return new Promise((resolve, reject) => {\n            cordova.exec(resolve, (error) => {\n                this.handleError(resolve, reject, error, () => this.importVault(data));\n            }, \"VaultPlugin\", \"importVault\", [this.config, jsonData]);\n        });\n    }\n    /**\n     * Checks if the vault is currently in a locked state, which signifies that the contents\n     * of the secure vault are not currently accessible. `isLocked` can also return true if the\n     * vault does not exist.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * const locked = await vault.isLocked();\n     * if (locked) {\n     *  // vault is locked (or does not exist);\n     * }\n     * ```\n     */\n    isLocked() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                this.handleError(resolve, reject, error);\n            }, \"VaultPlugin\", \"isLocked\", [this.config]);\n        });\n    }\n    /**\n     * Returns an array of keys that are currently in the vault.\n     * Calling `getKeys` will attempt to unlock the vault if it is currently locked.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * const allKeys = await vault.getKeys();\n     * allKeys.forEach((key) => {\n     *  // do something with the key\n     * });\n     * ```\n     */\n    getKeys() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.getKeys());\n            }, \"VaultPlugin\", \"getKeys\", [this.config]);\n        });\n    }\n    /**\n     * Gets the value for a given key. Returns null if the key does not exist.\n     * Calling `getValue` will attempt to unlock the vault if it is currently locked.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * const userFirstName = await vault.getValue<string>(\"firstname\");\n     * ```\n     *\n     * @param key The key to look up the value for\n     *\n     */\n    getValue(key) {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                if (!data) {\n                    // android returns null as an empty string, so manually convert it here\n                    resolve(null);\n                }\n                else {\n                    try {\n                        resolve(JSON.parse(data));\n                    }\n                    catch (err) {\n                        resolve(data);\n                    }\n                }\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.getValue(key));\n            }, \"VaultPlugin\", \"getValue\", [this.config, key]);\n        });\n    }\n    /**\n     * Locks the vault if it is currently unlocked.\n     * Locking the vault with remove all secure data from memory inside of Identity Vault, but not your application.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * await vault.lock();\n     * ```\n     */\n    lock() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                resolve();\n            }, (error) => {\n                this.handleError(resolve, reject, error);\n            }, \"VaultPlugin\", \"lock\", [this.config]);\n        });\n    }\n    /**\n     * Removes a value from the vault.\n     * Calling `removeValue` will attempt to unlock the vault if it is currently locked.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * await vault.removeValue(\"address\");\n     * ```\n     *\n     * @param key The key to remove\n     *\n     */\n    removeValue(key) {\n        return new Promise((resolve, reject) => {\n            cordova.exec(resolve, (error) => {\n                this.handleError(resolve, reject, error, () => this.removeValue(key));\n            }, \"VaultPlugin\", \"removeValue\", [this.config, key]);\n        });\n    }\n    /**\n     * When the vault type is set to 'CustomPasscode', this method sets the passcode required to\n     * secure the vault.\n     * This method is typically called in the `onPasscodeRequested` callback.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * const code = window.prompt(\"Enter your passcode.\");\n     * if (code) {\n     *  await vault.setCustomPasscode(code);\n     * }\n     * ```\n     *\n     * @param passcode The user supplied passcode to secure the vault with.\n     *\n     */\n    setCustomPasscode(passcode) {\n        return new Promise((resolve, reject) => {\n            cordova.exec(resolve, (error) => {\n                this.handleError(resolve, reject, error);\n            }, \"VaultPlugin\", \"setCustomPasscode\", [this.config, passcode]);\n        });\n    }\n    /**\n     * Sets the value of an item in the vault.\n     * Calling `setValue` will attempt to unlock the vault if it is currently locked.\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * await vault.setValue<string>(\"theme\", theme);\n     * ```\n     *\n     * @param key The key for the new value.\n     * @param value The value to store in the vault. Value can be of any type, as it will be parsed to JSON in the vault.\n     *\n     */\n    setValue(key, value) {\n        const jsonValue = JSON.stringify(value);\n        return new Promise((resolve, reject) => {\n            cordova.exec(resolve, (error) => {\n                this.handleError(resolve, reject, error, () => this.setValue(key, value));\n            }, \"VaultPlugin\", \"setValue\", [this.config, key, jsonValue]);\n        });\n    }\n    /**\n     * Triggers when a config change occurs.\n     *\n     * @usage\n     * ```typescript\n     * vault.onConfigChanged((config) => {\n     *  console.log(\"updated config: \", config);\n     * });\n     * ```\n     * @param callback The callback function that will be called when the event triggers. Passes in the current vault config.\n     *\n     */\n    onConfigChanged(callback) {\n        cordova.exec((data) => {\n            callback(JSON.parse(data));\n        }, (error) => console.error(error), \"VaultPlugin\", \"onConfigChanged\", []);\n    }\n    /**\n     * Triggers when an error occurs in the application.\n     * Errors that come back as rejected promises also trigger this event.\n     *\n     * @usage\n     * ```typescript\n     * vault.onError((err) => {\n     *  console.log('ERROR from callback', JSON.stringify(err));\n     * });\n     * ```\n     *\n     * @param callback The callback function that will be called when the event triggers. Passes in the error object.\n     *\n     */\n    onError(callback) {\n        cordova.exec(() => { }, callback, \"VaultPlugin\", \"onError\", []);\n    }\n    /**\n     * Triggers when the vault enters a locked state.\n     *\n     * @usage\n     * ```typescript\n     * vault.onLock(() => { displayNotification(\"Vault locked.\"); })\n     * ```\n     *\n     * @param callback The callback function that will be called when the event triggers.\n     *\n     */\n    onLock(callback) {\n        cordova.exec(callback, (error) => console.error(error), \"VaultPlugin\", \"onLock\", [this.config]);\n    }\n    /**\n     * For CustomPasscode vaults, this event triggers when the vault is attempting to unlock\n     * and the passcode has not been set yet. The callback function will pass in a Promise that,\n     * when resolved, with attempt to unlock the vault again calling the same method that originally\n     * tried to unlock the vault. Before the promise is resolved, you should prompt the user to supply a passcode, and\n     * then supply that value to `setCustomPasscode`.\n     *\n     * @usage\n     * ```typescript\n     * vault.onPasscodeRequested(async (isPasscodeSetRequest) => {\n     *  const message = isPasscodeSetRequest\n     *    ? 'Setup Passcode' // passcode is being set for first time\n     *    : 'Enter passcode'; // passcode is being asked for unlock\n     *  const passcode = window.prompt(message) || '';\n     *   vault.setCustomPasscode(passcode);\n     *   return Promise.resolve();\n     * });\n     * ```\n     *\n     * @param callback The callback function that will be called when the event triggers. The function returns a promise with a boolean that indicates if the passcode is being setup for the first time for the vault or not.\n     *\n     */\n    onPasscodeRequested(callback) {\n        this.passCodeRequestedCallback = callback;\n    }\n    /**\n     * Triggers when the vault enters an unlocked state.\n     *\n     * @usage\n     * ```typescript\n     * vault.onUnlock(() => {\n     *  console.log(\"vault is now unlocked\");\n     * });\n     * ```\n     * @param callback The callback function that will be called when the event triggers.\n     *\n     */\n    onUnlock(callback) {\n        cordova.exec(callback, (error) => console.error(error), \"VaultPlugin\", \"onUnlock\", [this.config]);\n    }\n    /**\n     * Manually unlock the vault. Will trigger any authentication mechanism needed to access the vault (passcode, biometrics, etc..).\n     *\n     * @usage\n     * ```typescript\n     * const vault = new Vault(existingVaultConfig);\n     * await vault.unlock();\n     * ```\n     */\n    unlock() {\n        return new Promise((resolve, reject) => {\n            cordova.exec(() => {\n                resolve();\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.unlock());\n            }, \"VaultPlugin\", \"unlock\", [this.config]);\n        });\n    }\n    /**\n     * Updates the configuration of the current vault.\n     *\n     *  @usage\n     * ```typescript\n     * async function changeVaultType(type: VaultType) {\n     *  const vault = new Vault(this.existingVaultConfig);\n     *  const newConfig = { ...this.existingVaultConfig, type };\n     *  await vault.updateConfig(newConfig);\n     *  this.existingVaultConfig = newConfig;\n     * }\n     * ```\n     *\n     * @param config The new config\n     *\n     */\n    updateConfig(config) {\n        return new Promise((resolve, reject) => {\n            config = Object.assign(this.defaultConfig, config);\n            // setting sane defaults\n            if (config.deviceSecurityType === DeviceSecurityType.None &&\n                config.type === VaultType.DeviceSecurity) {\n                config.deviceSecurityType = DeviceSecurityType.Both;\n            }\n            cordova.exec(() => {\n                this.config = config;\n                resolve();\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.updateConfig(config));\n            }, \"VaultPlugin\", \"updateConfig\", [config]);\n        });\n    }\n    /** @ignore */\n    async handleError(resolve, reject, error, retryFunc) {\n        if (error.code === VaultErrorCodes.MissingPasscode &&\n            this.passCodeRequestedCallback) {\n            await this.passCodeRequestedCallback(error.extra.isPasscodeSetRequest);\n            if (retryFunc) {\n                try {\n                    const data = await retryFunc();\n                    resolve(data);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n        }\n        else if (error.code === VaultErrorCodes.MissingBiometrics) {\n            cordova.exec(async () => {\n                const data = await retryFunc();\n                resolve(data);\n            }, (e) => reject(e), \"VaultPlugin\", \"requestBiometricPrompt\", [this.config]);\n        }\n        else {\n            reject(error);\n        }\n    }\n    /** @ignore */\n    requestBiometricPrompt() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                this.handleError(resolve, reject, error, () => this.requestBiometricPrompt());\n            }, \"VaultPlugin\", \"requestBiometricPrompt\", [this.config]);\n        });\n    }\n    /**\n     * @ignore\n     */\n    resume() {\n        const noop = () => { };\n        cordova.exec(noop, (error) => {\n            this.handleError(noop, noop, error, () => this.resume());\n        }, \"VaultPlugin\", \"appResumed\", [this.config]);\n    }\n    /**\n     * @ignore\n     */\n    setup() {\n        return new Promise((resolve, reject) => {\n            document.addEventListener(\"resume\", this.resume, false);\n            cordova.exec(resolve, (error) => {\n                this.handleError(resolve, reject, error);\n            }, \"VaultPlugin\", \"setup\", [this.config]);\n        });\n    }\n    /**\n     * @ignore\n     */\n    getPersistedVaultConfig() {\n        return new Promise((resolve, reject) => {\n            cordova.exec((data) => {\n                if (!data) {\n                    resolve();\n                }\n                else {\n                    const vaultConfig = JSON.parse(data);\n                    this.config = Object.assign(this.config, vaultConfig);\n                    resolve();\n                }\n            }, (error) => {\n                this.handleError(resolve, reject, error);\n            }, \"VaultPlugin\", \"getVaultConfig\", [this.config]);\n        });\n    }\n}\n\nclass Device {\n    /** @ignore */\n    constructor() { }\n    /**\n     * Gets the types of biometrics the device supports.\n     *\n     * @usage\n     * ```typescript\n     * const hardware = await Device.getAvailableHardware();\n     * hardware.forEach((biometricType) => console.log(\"Type: \" + biometricType));\n     * ```\n     */\n    static getAvailableHardware() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve([]);\n                return;\n            }\n            cordova.exec((data) => {\n                resolve(data);\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"getAvailableHardware\", []);\n        });\n    }\n    /**\n     * Check whether biometrics are locked out on the device.\n     *\n     * On Android, the locked out state will only known after an attempted biometric unlock.\n     *\n     * @usage\n     * ```typescript\n     * const isLockedOut = await Device.isLockedOutOfBiometrics();\n     * if (isLockedOut) {\n     *  // device is locked out ...\n     * }\n     * ```\n     */\n    static isLockedOutOfBiometrics() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve(false);\n                return;\n            }\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"isLockedOutOfBiometrics\", []);\n        });\n    }\n    /**\n     * Checks the device biometric strength level.\n     *\n     * On iOS this will always return 'strong'.\n     *\n     * @usage\n     * ```typescript\n     * const biometricStrength = await Device.getBiometricStrengthLevel();\n     * ```\n     */\n    static getBiometricStrengthLevel() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve(BiometricSecurityStrength.Weak);\n                return;\n            }\n            cordova.exec((data) => {\n                resolve(data);\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"getBiometricStrengthLevel\", []);\n        });\n    }\n    /**\n     * Check whether or not the screen will be obscured in app switcher mode.\n     *\n     * @usage\n     * ```typescript\n     * const willHideScreen = await Device.isHideScreenOnBackgroundEnabled();\n     * ```\n     */\n    static isHideScreenOnBackgroundEnabled() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve(false);\n                return;\n            }\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"isHideScreenOnBackgroundEnabled\", []);\n        });\n    }\n    /**\n     * Set whether or not the screen will be obscured in app switcher mode\n     *\n     * @usage\n     * ```typescript\n     * await Device.setHideScreenOnBackground(true);\n     * ```\n     */\n    static setHideScreenOnBackground(enabled) {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve();\n                return;\n            }\n            cordova.exec(() => {\n                resolve();\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"setHideScreenOnBackground\", [enabled]);\n        });\n    }\n    /**\n     * Check whether the device OS-level passcode has been set.\n     *\n     * @usage\n     * ```typescript\n     * const hasSystemPasscode = await Device.isSystemPasscodeSet();\n     * if (hasSystemPasscode) {\n     *  // device has a system passcode\n     * }\n     * ```\n     */\n    static isSystemPasscodeSet() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve(false);\n                return;\n            }\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"isSystemPasscodeSet\", []);\n        });\n    }\n    /**\n     * Check whether or not biometrics is supported by the device and has been configured by the current user of the device.\n     *\n     * @usage\n     * ```typescript\n     * const biometricsEnabled = await Device.isBiometricsEnabled();\n     * if (!biometricsEnabled) {\n     *  // biometrics not enabled on this device...\n     * }\n     * ```\n     */\n    static isBiometricsEnabled() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve(false);\n                return;\n            }\n            cordova.exec((data) => {\n                console.log(\"biometrics is enabled: \", data);\n                resolve(JSON.parse(data));\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"isBiometricsEnabled\", []);\n        });\n    }\n    /**\n     * Check whether or not biometrics is supported by the device.\n     *\n     * @usage\n     * ```typescript\n     * const biometricsSupported = await Device.isBiometricsSupported();\n     * if (biometricsSupported) {\n     *   // biometrics is supported on this device...\n     * }\n     * ```\n     */\n    static isBiometricsSupported() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve(false);\n                return;\n            }\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"isBiometricsSupported\", []);\n        });\n    }\n    /**\n     * Check if the device has a secure hardware enclave.\n     *\n     * @usage\n     * ```typescript\n     * const hasSecureHardware = await Device.hasSecureHardware();\n     * if (!hasSecureHardware) {\n     *    // this device doesn't have secure hardware\n     * }\n     * ```\n     */\n    static hasSecureHardware() {\n        return new Promise((resolve, reject) => {\n            if (!(\"cordova\" in window)) {\n                resolve(false);\n                return;\n            }\n            cordova.exec((data) => {\n                resolve(JSON.parse(data));\n            }, (error) => {\n                Device.handleError(resolve, reject, error);\n            }, \"DevicePlugin\", \"hasSecureHardware\", []);\n        });\n    }\n    /**\n     * @ignore\n     */\n    static async handleError(resolve, reject, error, retryFunc) {\n        reject(error);\n    }\n}\n\n/**\n * @hidden\n *\n * @ignore\n */\nclass IonicIdentityVaultUser {\n    constructor(platform, options, descriptor) {\n        this.platform = platform;\n        this.options = options;\n        this._readyCalled = false;\n        this.descriptor = descriptor || { username: '_lastUser', vaultId: 'default' };\n        this._readyPromise = this.initializeVault();\n    }\n    get token() {\n        const session = this.session;\n        return session && session.token;\n    }\n    get username() {\n        const session = this.session;\n        return session && session.username;\n    }\n    get config() {\n        if (!this._config) {\n            return undefined;\n        }\n        let authMode;\n        const bioEnabled = this._config.isBiometricsEnabled;\n        const passEnabled = this._config.isPasscodeEnabled;\n        const secureStorageMode = this._config.isSecureStorageModeEnabled;\n        if (secureStorageMode) {\n            authMode = AuthMode.SecureStorage;\n        }\n        else if (bioEnabled && passEnabled) {\n            authMode = AuthMode.BiometricAndPasscode;\n        }\n        else if (bioEnabled && !passEnabled) {\n            authMode = AuthMode.BiometricOnly;\n        }\n        else if (!bioEnabled && passEnabled) {\n            authMode = AuthMode.PasscodeOnly;\n        }\n        else if (!bioEnabled && !passEnabled) {\n            authMode = AuthMode.InMemoryOnly;\n        }\n        return {\n            authMode: authMode,\n            isPasscodeSetupNeeded: this._config.isPasscodeSetupNeeded,\n            lockAfter: this._config.lockAfter,\n            hideScreenOnBackground: this._config.hideScreenOnBackground,\n        };\n    }\n    // overidable event handlers\n    onVaultLocked(_event) { }\n    onSessionRestoreError(_err) { }\n    onUnlockOnReadyError(_err) { }\n    onVaultUnlocked(_config) { }\n    onVaultReady(_config) { }\n    onSetupError(_error) { }\n    onConfigChange(_config) { }\n    ;\n    onSessionRestored(_session) { }\n    ;\n    async onPasscodeRequest(_isPasscodeSetRequest) { return; }\n    ;\n    async onReady(vault) {\n        if (this._readyCalled) {\n            return;\n        }\n        this._readyCalled = true;\n        this.vault = vault;\n        const inUse = await this.vault.isInUse();\n        this._config = vault.config;\n        const locked = await this.vault.isLocked();\n        let restoreSessionError;\n        try {\n            if (this.options.restoreSessionOnReady && inUse) {\n                await this._restoreSession();\n            }\n        }\n        catch (e) {\n            restoreSessionError = e;\n        }\n        let unlockOnReadyError;\n        try {\n            if (locked && this.options.unlockOnReady) {\n                await this._unlock();\n            }\n        }\n        catch (e) {\n            unlockOnReadyError = e;\n        }\n        // Note Swallow all errors in init like Vault is Locked Etc.\n        try {\n            if (!inUse) {\n                await this._trySetAuthMode(this.options.authMode);\n            }\n        }\n        catch (e) { }\n        this._readyResolve();\n        this.onVaultReady(this.config);\n        if (restoreSessionError) {\n            this.onSessionRestoreError(restoreSessionError);\n        }\n        if (unlockOnReadyError) {\n            this.onUnlockOnReadyError(restoreSessionError);\n        }\n    }\n    onLock(event) {\n        this.session = undefined;\n        this.onVaultLocked(event);\n    }\n    async onUnlock(config) {\n        await this.ready();\n        this._config = config;\n        this.onVaultUnlocked(this.config);\n    }\n    onError(error) {\n        this._readyReject(error);\n        this.onSetupError(error);\n    }\n    onConfig(config) {\n        this._config = config;\n        this.onConfigChange(this.config);\n    }\n    async ready() {\n        return this._readyPromise;\n    }\n    async _unlock(authMode) {\n        const locked = await this.vault.isLocked();\n        if (!locked) {\n            return;\n        }\n        authMode = authMode !== undefined && authMode !== AuthMode.BiometricOrPasscode ? authMode : this.config.authMode;\n        switch (authMode) {\n            case AuthMode.BiometricOnly:\n                return this.vault.unlock();\n            case AuthMode.PasscodeOnly:\n                return this.unlockWithPasscode();\n            case AuthMode.BiometricAndPasscode:\n                try {\n                    await this.vault.unlock();\n                    return;\n                }\n                catch (e) {\n                    const handleableErrors = [\n                        VaultErrorCodes.AuthFailed,\n                        VaultErrorCodes.BiometricsNotEnabled,\n                        VaultErrorCodes.UserCanceledInteraction,\n                        VaultErrorCodes.InvalidatedCredential,\n                    ];\n                    if (handleableErrors.indexOf(e.code) > -1) {\n                        await this.unlockWithPasscode();\n                        // The user removed fingerprints/faceID and so the bio creds are gone\n                        // if they are using passcode auth we can resave the credential to autoreset\n                        // the mode to PasscodeOnly if bio is no longer available.\n                        if (e.code === VaultErrorCodes.InvalidatedCredential) {\n                            const session = await this.restoreSession();\n                            await this.saveSession(session);\n                        }\n                        return;\n                    }\n                    throw e;\n                }\n        }\n    }\n    async unlock(authMode) {\n        await this.ready();\n        return this._unlock(authMode);\n    }\n    async unlockWithPasscode() {\n        const passcode = await this.onPasscodeRequest(false);\n        return this.vault.unlock(true, passcode);\n    }\n    async _setPasscode() {\n        const locked = await this.vault.isLocked();\n        if (locked) {\n            throw { code: VaultErrorCodes.VaultLocked, message: \"Operation not allowed while vault locked.\" };\n        }\n        const passcode = await this.onPasscodeRequest(true);\n        return this.vault.setPasscode(passcode);\n    }\n    async setPasscode() {\n        await this.ready();\n        return this._setPasscode();\n    }\n    async getSession() {\n        await this.ready();\n        if (this.options.unlockOnAccess) {\n            await this._unlock();\n        }\n        return this.session;\n    }\n    async _restoreSession() {\n        const inUse = await this.vault.isInUse();\n        if (!inUse) {\n            return;\n        }\n        if (this.options.unlockOnAccess) {\n            await this._unlock();\n        }\n        this.session = await this.vault.getValue('session');\n        this.onSessionRestored(this.session);\n        return this.session;\n    }\n    async restoreSession() {\n        await this.ready();\n        return this._restoreSession();\n    }\n    async saveSession(session) {\n        await this.ready();\n        if (this.config.isPasscodeSetupNeeded) {\n            await this.setPasscode();\n        }\n        try {\n            await this.vault.storeValue('session', session);\n        }\n        catch (e) {\n            // Catch the case where Biometrics with Passcode Fallback\n            // was enabled but the user disabled passcode or removed their\n            // fingerprints/faceid and try to recover by setting to passcode only\n            // mode.\n            if (e.code === VaultErrorCodes.SecurityNotAvailable) {\n                const authMode = await this.getAuthMode();\n                if (authMode === AuthMode.BiometricAndPasscode) {\n                    await this.setAuthMode(AuthMode.PasscodeOnly);\n                    return this.saveSession(session);\n                }\n            }\n            throw e;\n        }\n        this.session = session;\n    }\n    async login(session, authMode) {\n        await this.ready();\n        await this.logout();\n        await this._trySetAuthMode(authMode);\n        return this.saveSession(session);\n    }\n    async getVault() {\n        await this.ready();\n        return this.vault;\n    }\n    async initializeVault() {\n        await this.platform.ready();\n        if (this.vault != null) {\n            return Promise.resolve();\n        }\n        if (this.vIonicNativeAuth == null) {\n            this.vIonicNativeAuth = this.getPlugin();\n        }\n        const readyPromise = new Promise((resolve, reject) => {\n            this._readyResolve = resolve;\n            this._readyReject = reject;\n        });\n        const { lockAfter, hideScreenOnBackground, shouldClearVaultAfterTooManyFailedAttempts, allowSystemPinFallback, androidPromptNegativeButtonText, androidPromptTitle, androidPromptSubtitle, androidPromptDescription, iosPromptText } = this.options;\n        this.vault = this.vIonicNativeAuth.getVault(Object.assign(Object.assign({ lockAfter,\n            hideScreenOnBackground,\n            shouldClearVaultAfterTooManyFailedAttempts,\n            allowSystemPinFallback,\n            androidPromptNegativeButtonText,\n            androidPromptTitle,\n            androidPromptSubtitle,\n            androidPromptDescription,\n            iosPromptText }, this.descriptor), { onLock: this.onLock.bind(this), onConfig: this.onConfig.bind(this), onError: this.onError.bind(this), onUnlock: this.onUnlock.bind(this), onReady: this.onReady.bind(this) }));\n        return readyPromise;\n    }\n    getPlugin() {\n        return IonicNativeAuth;\n    }\n    async getBiometricType() {\n        await this.ready();\n        return this.vault.getBiometricType();\n    }\n    async getAvailableHardware() {\n        await this.ready();\n        return this.vault.getAvailableHardware();\n    }\n    async lockOut() {\n        await this.ready();\n        await this.vault.lock();\n        this.session = undefined;\n    }\n    async logout() {\n        await this.ready();\n        await this.vault.clear();\n        this.session = undefined;\n        this._config = await this.vault.getConfig();\n    }\n    async hasStoredSession() {\n        await this.ready();\n        return this.vault.isInUse();\n    }\n    async setBiometricsEnabled(isBiometricsEnabled) {\n        await this.ready();\n        return this._setBiometricsEnabled(isBiometricsEnabled);\n    }\n    async _setBiometricsEnabled(isBiometricsEnabled) {\n        return this.vault.setBiometricsEnabled(isBiometricsEnabled);\n    }\n    async setHideScreenOnBackground(enabled) {\n        await this.ready();\n        return this.vault.setHideScreenOnBackground(enabled);\n    }\n    async setPasscodeEnabled(isPasscodeEnabled) {\n        await this.ready();\n        await this._setPasscodeEnabled(isPasscodeEnabled);\n    }\n    async _setPasscodeEnabled(isPasscodeEnabled) {\n        await this.vault.setPasscodeEnabled(isPasscodeEnabled);\n        this._config = await this.vault.getConfig();\n        if (this.config.isPasscodeSetupNeeded) {\n            await this._setPasscode();\n        }\n    }\n    async isBiometricsEnabled() {\n        await this.ready();\n        return this.vault.isBiometricsEnabled();\n    }\n    async isBiometricsAvailable() {\n        await this.ready();\n        return this.vault.isBiometricsAvailable();\n    }\n    async isBiometricsSupported() {\n        await this.ready();\n        return this.vault.isBiometricsSupported();\n    }\n    async isSecureStorageModeEnabled() {\n        await this.ready();\n        return this.vault.isSecureStorageModeEnabled();\n    }\n    async isPasscodeEnabled() {\n        await this.ready();\n        return this.vault.isPasscodeEnabled();\n    }\n    async _setAuthMode(authMode) {\n        authMode = authMode !== undefined ? authMode : this.config.authMode;\n        if (authMode === this.config.authMode) {\n            return;\n        }\n        switch (authMode) {\n            case AuthMode.BiometricOnly:\n                await this._setBiometricsEnabled(true);\n                await this._setPasscodeEnabled(false);\n                break;\n            case AuthMode.PasscodeOnly:\n                await this._setPasscodeEnabled(true);\n                await this._setBiometricsEnabled(false);\n                break;\n            case AuthMode.BiometricAndPasscode:\n                await this._setPasscodeEnabled(true);\n                await this._setBiometricsEnabled(true);\n                break;\n            case AuthMode.BiometricOrPasscode:\n                try {\n                    await this._setBiometricsEnabled(true);\n                    await this._setPasscodeEnabled(false);\n                }\n                catch (error) {\n                    await this._setPasscodeEnabled(true);\n                }\n                break;\n            case AuthMode.InMemoryOnly:\n                await this._setPasscodeEnabled(false);\n                await this._setBiometricsEnabled(false);\n                await this.vault.setSecureStorageModeEnabled(false);\n                break;\n            case AuthMode.SecureStorage:\n                // Note: Setting this mode automatically disables the other modes in native code.\n                await this.vault.setSecureStorageModeEnabled(true);\n                break;\n            default:\n                throw { code: VaultErrorCodes.InvalidAuthMode, message: \"Invalid AuthMode\" };\n        }\n    }\n    async _trySetAuthMode(authMode) {\n        try {\n            await this._setAuthMode(authMode);\n        }\n        catch (error) {\n            if (error.code !== VaultErrorCodes.BiometricsNotEnabled &&\n                error.code !== VaultErrorCodes.SecurityNotAvailable) {\n                throw error;\n            }\n        }\n    }\n    async setAuthMode(authMode) {\n        await this.ready();\n        return this._setAuthMode(authMode);\n    }\n    async getAuthMode() {\n        await this.ready();\n        this._config = await this.vault.getConfig();\n        return this.config.authMode;\n    }\n}\n\nclass MigratorVault extends IonicIdentityVaultUser {\n    constructor(options, onPasscodeRequest, descriptor) {\n        super({\n            ready: () => Promise.resolve(true),\n        }, options, descriptor);\n        if (onPasscodeRequest) {\n            this.onPasscodeRequest = onPasscodeRequest;\n        }\n    }\n    static getInstance(options, onPasscodeRequest, descriptor) {\n        if (!MigratorVault.instance) {\n            MigratorVault.instance = new MigratorVault(options, onPasscodeRequest, descriptor);\n        }\n        return MigratorVault.instance;\n    }\n}\nMigratorVault.instance = undefined;\nclass VaultMigrator {\n    /**\n     *\n     * @usage\n     * ```typescript\n     * const legacyVaultConfig = {\n     *  unlockOnAccess: true,\n     *  hideScreenOnBackground: true,\n     *  lockAfter: 5000,\n     *  // and more ....\n     * }\n     * const migrator = new VaultMigrator(legacyVaultConfig, customPasscodePrompt);\n     * ```\n     * @param options The legacy vault configuration options\n     * @param onPasscodeRequest An optional callback function that will be called when the vault attempts to request a passcode. The function returns a promise with a boolean that indicates if the passcode is being setup for the first time for the vault or not.\n     * @param descriptor An optional interface that describes the legacy vault.\n     */\n    constructor(options, onPasscodeRequest, descriptor) {\n        this.migratorSession = MigratorVault.getInstance(options, onPasscodeRequest, descriptor);\n    }\n    /**\n     * Exports the data of the legacy vault in its entirety.\n     *\n     * @usage\n     * ```typescript\n     * const data = await migrator.exportVault();\n     * console.log(\"@@VAULT DATA: \", JSON.stringify(data));\n     * ```\n     * @returns\n     */\n    async exportVault() {\n        if (!(await this.migratorSession.hasStoredSession())) {\n            throw Error(\"no data in legacy vault\");\n        }\n        await this.migratorSession.unlock();\n        const vault = await this.migratorSession.getVault();\n        const keys = await vault.getKeys();\n        let vaultData = {};\n        for (let i = 0; i < keys.length; i++) {\n            const keyValue = await vault.getValue(keys[i]);\n            vaultData[keys[i]] = keyValue;\n        }\n        return vaultData;\n    }\n    /**\n     * Clears out the legacy vault and removes it from the system.  Be sure to run {@link VaultMigrator.exportVault} before calling this method.\n     *\n     * @usage\n     * ```typescript\n     * const data = await migrator.exportVault();\n     * await importVault(data);\n     * await migrator.clear();\n     * ```\n     */\n    async clear() {\n        const vault = await this.migratorSession.getVault();\n        return vault.clear();\n    }\n}\n\nexport { AndroidBiometricCryptoPreference, AuthMode, BiometricSecurityStrength, BrowserVault, Device, DeviceSecurityType, SupportedBiometricType, Vault, VaultErrorCodes, VaultMigrator, VaultType };\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","import { Component } from \"@angular/core\";\nimport { VaultService, VaultServiceState } from \"../vault.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.page.html\",\n  styleUrls: [\"home.page.scss\"],\n})\nexport class HomePage {\n  public state: VaultServiceState;\n\n  constructor(private vaultService: VaultService) {\n    this.state = vaultService.state;\n  }\n\n  async setSession(data: string) {\n    await this.vaultService.setSession(data);\n  }\n\n  async restoreSession() {\n    await this.vaultService.restoreSession();\n  }\n\n  lockVault() {\n    this.vaultService.lockVault();\n  }\n\n  unlockVault() {\n    this.vaultService.unlockVault();\n  }\n\n  setLockType() {\n    this.vaultService.setLockType();\n  }\n\n  setPrivacyScreen() {\n    this.vaultService.setPrivacyScreen(this.state.privacyScreen);\n  }\n\n  clearVault() {\n    this.vaultService.clearVault();\n  }\n}\n","import { Injectable, NgZone } from \"@angular/core\";\nimport { Capacitor } from \"@capacitor/core\";\nimport {\n  Vault,\n  Device,\n  DeviceSecurityType,\n  VaultType,\n  BrowserVault,\n  IdentityVaultConfig,\n} from \"@ionic-enterprise/identity-vault\";\nimport { Platform } from \"@ionic/angular\";\n\nconst config: IdentityVaultConfig = {\n  key: \"io.ionic.getstartedivangular\",\n  type: VaultType.DeviceSecurity,\n  deviceSecurityType: DeviceSecurityType.Both,\n  lockAfterBackgrounded: 2000,\n  shouldClearVaultAfterTooManyFailedAttempts: true,\n  customPasscodeInvalidUnlockAttempts: 2,\n  unlockVaultOnLoad: false,\n  iosBiometricsLocalizedFallbackTitle:\"Use Password\"\n};\nconst key = \"sessionData\";\n\nexport interface VaultServiceState {\n  session: string;\n  isLocked: boolean;\n  privacyScreen: boolean;\n  lockType: \"NoLocking\" | \"Biometrics\" | \"SystemPasscode\" | \"Both\";\n  canUseBiometrics: boolean;\n  canUseBoth: boolean;\n  canUsePasscode: boolean;\n  vaultExists: boolean;\n}\n\n@Injectable({ providedIn: \"root\" })\nexport class VaultService {\n  public state: VaultServiceState = {\n    session: \"\",\n    isLocked: false,\n    privacyScreen: false,\n    lockType: \"Both\",\n    canUseBiometrics: false,\n    canUseBoth: false,\n    canUsePasscode: false,\n    vaultExists: false,\n  };\n\n  vault: Vault | BrowserVault;\n\n  constructor(private ngZone: NgZone, private platform: Platform) {\n    this.vault = new Vault(config);\n    this.vault.onLock(() => {\n      this.ngZone.run(() => {\n        this.state.isLocked = true;\n        this.state.session = undefined;\n      });\n    });\n\n    this.vault.onUnlock(() => {\n      this.ngZone.run(() => {\n        this.state.isLocked = false;\n      });\n    });\n    this.init();\n  }\n\n  async init() {\n    \n    this.state.isLocked = await this.vault.isLocked();\n    this.state.privacyScreen =\n      Capacitor.getPlatform() === \"web\"\n        ? false\n        : await Device.isHideScreenOnBackgroundEnabled();\n    this.state.canUseBiometrics =\n      Capacitor.getPlatform() === \"web\"\n        ? false\n        : await Device.isBiometricsEnabled();\n        this.state.canUseBoth =\n      Capacitor.getPlatform() === \"web\"\n        ? false\n        : await Device.isBiometricsEnabled() && await Device.isSystemPasscodeSet();\n    this.state.canUsePasscode =\n      Capacitor.getPlatform() === \"web\"\n        ? false\n        : await Device.isSystemPasscodeSet();\n    this.state.vaultExists = await this.vault.doesVaultExist();\n  }\n\n  async setSession(value: string): Promise<void> {\n    this.state.session = value;\n    await this.vault.setValue(key, value);\n    this.state.vaultExists = await this.vault.doesVaultExist();\n  }\n\n  async restoreSession() {\n    const value = await this.vault.getValue(key);\n    this.state.session = value;\n  }\n\n  async lockVault() {\n    await this.vault.lock();\n  }\n\n  async unlockVault() {\n    await this.vault.unlock();\n  }\n\n  setPrivacyScreen(enabled: boolean) {\n    Device.setHideScreenOnBackground(enabled);\n    this.state.privacyScreen = enabled;\n  }\n\n  async setLockType() {\n    let type: VaultType;\n    let deviceSecurityType: DeviceSecurityType;\n\n    switch (this.state.lockType) {\n      case \"Biometrics\":\n        type = VaultType.DeviceSecurity;\n        deviceSecurityType = DeviceSecurityType.Biometrics;\n        break;\n\n      case \"SystemPasscode\":\n        type = VaultType.DeviceSecurity;\n        deviceSecurityType = DeviceSecurityType.SystemPasscode;\n        break;\n\n        case \"Both\":\n        type = VaultType.DeviceSecurity;\n        deviceSecurityType = DeviceSecurityType.Both;\n        break;\n\n      default:\n        type = VaultType.SecureStorage;\n        deviceSecurityType = DeviceSecurityType.None;\n    }\n    await this.vault.updateConfig({ ...this.vault.config, type, deviceSecurityType });\n  }\n\n  async clearVault() {\n    await this.vault.clear();\n    this.state.lockType = \"NoLocking\";\n    this.state.session = undefined;\n    this.state.vaultExists = await this.vault.doesVaultExist();\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Blank\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Blank</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Enter the \\\"session\\\" data</ion-label>\\n      <ion-input [(ngModel)]=\\\"state.session\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <div style=\\\"flex: auto;\\\">\\n        <ion-button expand=\\\"block\\\" (click)=\\\"setSession(state.session)\\\">Set Session Data</ion-button>\\n      </div>\\n    </ion-item>\\n\\n    <ion-item>\\n      <div style=\\\"flex: auto;\\\">\\n        <ion-button expand=\\\"block\\\" (click)=\\\"restoreSession()\\\">Restore Session Data</ion-button>\\n      </div>\\n    </ion-item>\\n\\n    <ion-item>\\n      <div style=\\\"flex: auto;\\\">\\n        <ion-button expand=\\\"block\\\" (click)=\\\"lockVault()\\\">Lock Vault</ion-button>\\n      </div>\\n    </ion-item>\\n\\n    <ion-item>\\n      <div style=\\\"flex: auto;\\\">\\n        <ion-button expand=\\\"block\\\" (click)=\\\"unlockVault()\\\">Unlock Vault</ion-button>\\n      </div>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Use Privacy Screen</ion-label>\\n      <ion-checkbox [(ngModel)]=\\\"state.privacyScreen\\\" (ionChange)=\\\"setPrivacyScreen()\\\"></ion-checkbox>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-radio-group [(ngModel)]=\\\"state.lockType\\\" (ionChange)=\\\"setLockType()\\\">\\n        <ion-list-header>\\n          <ion-label> Vault Locking Mechanism </ion-label>\\n        </ion-list-header>\\n\\n        <ion-item>\\n          <ion-label>Do Not Lock</ion-label>\\n          <ion-radio value=\\\"NoLocking\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Use Biometrics</ion-label>\\n          <ion-radio [disabled]=\\\"!state.canUseBiometrics\\\" value=\\\"Biometrics\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Use System Passcode</ion-label>\\n          <ion-radio [disabled]=\\\"!state.canUsePasscode\\\" value=\\\"SystemPasscode\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Use Both</ion-label>\\n          <ion-radio [disabled]=\\\"!state.canUseBoth\\\" value=\\\"Both\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-item>\\n\\n    <ion-item>\\n      <div style=\\\"flex: auto;\\\">\\n        <ion-button expand=\\\"block\\\" (click)=\\\"clearVault()\\\">Clear Vault</ion-button>\\n      </div>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>\\n        <div>Session Data: {{ state.session }}</div>\\n        <div>Vault is locked: {{ state.isLocked }}</div>\\n        <div>Vault exists: {{ state.vaultExists }}</div>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";"]}