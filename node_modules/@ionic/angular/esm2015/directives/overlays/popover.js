import { __decorate } from "tslib";
/* eslint-disable */
/* tslint:disable */
import { ChangeDetectionStrategy, Component, ContentChild, TemplateRef, } from '@angular/core';
import { ProxyCmp, proxyOutputs } from '../angular-component-lib/utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
let IonPopover = class IonPopover {
    constructor(c, r, z) {
        this.z = z;
        this.isCmpOpen = false;
        c.detach();
        this.el = r.nativeElement;
        this.el.addEventListener('willPresent', () => {
            this.isCmpOpen = true;
            c.detectChanges();
        });
        this.el.addEventListener('didDismiss', () => {
            this.isCmpOpen = false;
            c.detectChanges();
        });
        proxyOutputs(this, this.el, [
            'ionPopoverDidPresent',
            'ionPopoverWillPresent',
            'ionPopoverWillDismiss',
            'ionPopoverDidDismiss',
            'didPresent',
            'willPresent',
            'willDismiss',
            'didDismiss',
        ]);
    }
};
/** @nocollapse */ IonPopover.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: IonPopover, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ IonPopover.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.10", type: IonPopover, selector: "ion-popover", inputs: { alignment: "alignment", animated: "animated", arrow: "arrow", backdropDismiss: "backdropDismiss", cssClass: "cssClass", dismissOnSelect: "dismissOnSelect", enterAnimation: "enterAnimation", event: "event", isOpen: "isOpen", keyboardClose: "keyboardClose", leaveAnimation: "leaveAnimation", mode: "mode", showBackdrop: "showBackdrop", translucent: "translucent", trigger: "trigger", triggerAction: "triggerAction", reference: "reference", size: "size" }, queries: [{ propertyName: "template", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: `<ng-container [ngTemplateOutlet]="template" *ngIf="isCmpOpen"></ng-container>`, isInline: true, directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
IonPopover = __decorate([
    ProxyCmp({
        inputs: [
            'alignment',
            'animated',
            'arrow',
            'backdropDismiss',
            'cssClass',
            'dismissOnSelect',
            'enterAnimation',
            'event',
            'isOpen',
            'keyboardClose',
            'leaveAnimation',
            'mode',
            'showBackdrop',
            'translucent',
            'trigger',
            'triggerAction',
            'reference',
            'size',
        ],
        methods: ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss'],
    })
], IonPopover);
export { IonPopover };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.10", ngImport: i0, type: IonPopover, decorators: [{
            type: Component,
            args: [{
                    selector: 'ion-popover',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: `<ng-container [ngTemplateOutlet]="template" *ngIf="isCmpOpen"></ng-container>`,
                    inputs: [
                        'alignment',
                        'animated',
                        'arrow',
                        'backdropDismiss',
                        'cssClass',
                        'dismissOnSelect',
                        'enterAnimation',
                        'event',
                        'isOpen',
                        'keyboardClose',
                        'leaveAnimation',
                        'mode',
                        'showBackdrop',
                        'translucent',
                        'trigger',
                        'triggerAction',
                        'reference',
                        'size',
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { template: [{
                type: ContentChild,
                args: [TemplateRef, { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9kaXJlY3RpdmVzL292ZXJsYXlzL3BvcG92ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsT0FBTyxFQUNMLHVCQUF1QixFQUV2QixTQUFTLEVBQ1QsWUFBWSxFQUlaLFdBQVcsR0FDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7SUFtRDNELFVBQVUsU0FBVixVQUFVO0lBY3JCLFlBQVksQ0FBb0IsRUFBRSxDQUFhLEVBQVksQ0FBUztRQUFULE1BQUMsR0FBRCxDQUFDLENBQVE7UUFIcEUsY0FBUyxHQUFZLEtBQUssQ0FBQztRQUl6QixDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDWCxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUM7UUFFMUIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFO1lBQzNDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1lBQ3RCLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLEdBQUcsRUFBRTtZQUMxQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN2QixDQUFDLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUU7WUFDMUIsc0JBQXNCO1lBQ3RCLHVCQUF1QjtZQUN2Qix1QkFBdUI7WUFDdkIsc0JBQXNCO1lBQ3RCLFlBQVk7WUFDWixhQUFhO1lBQ2IsYUFBYTtZQUNiLFlBQVk7U0FDYixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0YsQ0FBQTsySEF0Q1ksVUFBVTsrR0FBVixVQUFVLHlpQkFDUCxXQUFXLGdEQXZCZiwrRUFBK0U7QUFzQjlFLFVBQVU7SUFoRHRCLFFBQVEsQ0FBQztRQUNSLE1BQU0sRUFBRTtZQUNOLFdBQVc7WUFDWCxVQUFVO1lBQ1YsT0FBTztZQUNQLGlCQUFpQjtZQUNqQixVQUFVO1lBQ1YsaUJBQWlCO1lBQ2pCLGdCQUFnQjtZQUNoQixPQUFPO1lBQ1AsUUFBUTtZQUNSLGVBQWU7WUFDZixnQkFBZ0I7WUFDaEIsTUFBTTtZQUNOLGNBQWM7WUFDZCxhQUFhO1lBQ2IsU0FBUztZQUNULGVBQWU7WUFDZixXQUFXO1lBQ1gsTUFBTTtTQUNQO1FBQ0QsT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsZUFBZSxDQUFDO0tBQ2pFLENBQUM7R0EwQlcsVUFBVSxDQXNDdEI7U0F0Q1ksVUFBVTs0RkFBVixVQUFVO2tCQXpCdEIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFFBQVEsRUFBRSwrRUFBK0U7b0JBQ3pGLE1BQU0sRUFBRTt3QkFDTixXQUFXO3dCQUNYLFVBQVU7d0JBQ1YsT0FBTzt3QkFDUCxpQkFBaUI7d0JBQ2pCLFVBQVU7d0JBQ1YsaUJBQWlCO3dCQUNqQixnQkFBZ0I7d0JBQ2hCLE9BQU87d0JBQ1AsUUFBUTt3QkFDUixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsTUFBTTt3QkFDTixjQUFjO3dCQUNkLGFBQWE7d0JBQ2IsU0FBUzt3QkFDVCxlQUFlO3dCQUNmLFdBQVc7d0JBQ1gsTUFBTTtxQkFDUDtpQkFDRjtzSkFFK0MsUUFBUTtzQkFBckQsWUFBWTt1QkFBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIHRzbGludDpkaXNhYmxlICovXG5pbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIENvbXBvbmVudCxcbiAgQ29udGVudENoaWxkLFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIE5nWm9uZSxcbiAgVGVtcGxhdGVSZWYsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUHJveHlDbXAsIHByb3h5T3V0cHV0cyB9IGZyb20gJy4uL2FuZ3VsYXItY29tcG9uZW50LWxpYi91dGlscyc7XG5pbXBvcnQgeyBDb21wb25lbnRzIH0gZnJvbSAnQGlvbmljL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgaW50ZXJmYWNlIElvblBvcG92ZXIgZXh0ZW5kcyBDb21wb25lbnRzLklvblBvcG92ZXIge31cbkBQcm94eUNtcCh7XG4gIGlucHV0czogW1xuICAgICdhbGlnbm1lbnQnLFxuICAgICdhbmltYXRlZCcsXG4gICAgJ2Fycm93JyxcbiAgICAnYmFja2Ryb3BEaXNtaXNzJyxcbiAgICAnY3NzQ2xhc3MnLFxuICAgICdkaXNtaXNzT25TZWxlY3QnLFxuICAgICdlbnRlckFuaW1hdGlvbicsXG4gICAgJ2V2ZW50JyxcbiAgICAnaXNPcGVuJyxcbiAgICAna2V5Ym9hcmRDbG9zZScsXG4gICAgJ2xlYXZlQW5pbWF0aW9uJyxcbiAgICAnbW9kZScsXG4gICAgJ3Nob3dCYWNrZHJvcCcsXG4gICAgJ3RyYW5zbHVjZW50JyxcbiAgICAndHJpZ2dlcicsXG4gICAgJ3RyaWdnZXJBY3Rpb24nLFxuICAgICdyZWZlcmVuY2UnLFxuICAgICdzaXplJyxcbiAgXSxcbiAgbWV0aG9kczogWydwcmVzZW50JywgJ2Rpc21pc3MnLCAnb25EaWREaXNtaXNzJywgJ29uV2lsbERpc21pc3MnXSxcbn0pXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdpb24tcG9wb3ZlcicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYDxuZy1jb250YWluZXIgW25nVGVtcGxhdGVPdXRsZXRdPVwidGVtcGxhdGVcIiAqbmdJZj1cImlzQ21wT3BlblwiPjwvbmctY29udGFpbmVyPmAsXG4gIGlucHV0czogW1xuICAgICdhbGlnbm1lbnQnLFxuICAgICdhbmltYXRlZCcsXG4gICAgJ2Fycm93JyxcbiAgICAnYmFja2Ryb3BEaXNtaXNzJyxcbiAgICAnY3NzQ2xhc3MnLFxuICAgICdkaXNtaXNzT25TZWxlY3QnLFxuICAgICdlbnRlckFuaW1hdGlvbicsXG4gICAgJ2V2ZW50JyxcbiAgICAnaXNPcGVuJyxcbiAgICAna2V5Ym9hcmRDbG9zZScsXG4gICAgJ2xlYXZlQW5pbWF0aW9uJyxcbiAgICAnbW9kZScsXG4gICAgJ3Nob3dCYWNrZHJvcCcsXG4gICAgJ3RyYW5zbHVjZW50JyxcbiAgICAndHJpZ2dlcicsXG4gICAgJ3RyaWdnZXJBY3Rpb24nLFxuICAgICdyZWZlcmVuY2UnLFxuICAgICdzaXplJyxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgSW9uUG9wb3ZlciB7XG4gIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiBmYWxzZSB9KSB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICBpb25Qb3BvdmVyRGlkUHJlc2VudCE6IEV2ZW50RW1pdHRlcjxDdXN0b21FdmVudD47XG4gIGlvblBvcG92ZXJXaWxsUHJlc2VudCE6IEV2ZW50RW1pdHRlcjxDdXN0b21FdmVudD47XG4gIGlvblBvcG92ZXJXaWxsRGlzbWlzcyE6IEV2ZW50RW1pdHRlcjxDdXN0b21FdmVudD47XG4gIGlvblBvcG92ZXJEaWREaXNtaXNzITogRXZlbnRFbWl0dGVyPEN1c3RvbUV2ZW50PjtcbiAgZGlkUHJlc2VudCE6IEV2ZW50RW1pdHRlcjxDdXN0b21FdmVudD47XG4gIHdpbGxQcmVzZW50ITogRXZlbnRFbWl0dGVyPEN1c3RvbUV2ZW50PjtcbiAgd2lsbERpc21pc3MhOiBFdmVudEVtaXR0ZXI8Q3VzdG9tRXZlbnQ+O1xuICBkaWREaXNtaXNzITogRXZlbnRFbWl0dGVyPEN1c3RvbUV2ZW50PjtcbiAgaXNDbXBPcGVuOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJvdGVjdGVkIGVsOiBIVE1MRWxlbWVudDtcbiAgY29uc3RydWN0b3IoYzogQ2hhbmdlRGV0ZWN0b3JSZWYsIHI6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCB6OiBOZ1pvbmUpIHtcbiAgICBjLmRldGFjaCgpO1xuICAgIHRoaXMuZWwgPSByLm5hdGl2ZUVsZW1lbnQ7XG5cbiAgICB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoJ3dpbGxQcmVzZW50JywgKCkgPT4ge1xuICAgICAgdGhpcy5pc0NtcE9wZW4gPSB0cnVlO1xuICAgICAgYy5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgfSk7XG4gICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdkaWREaXNtaXNzJywgKCkgPT4ge1xuICAgICAgdGhpcy5pc0NtcE9wZW4gPSBmYWxzZTtcbiAgICAgIGMuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH0pO1xuXG4gICAgcHJveHlPdXRwdXRzKHRoaXMsIHRoaXMuZWwsIFtcbiAgICAgICdpb25Qb3BvdmVyRGlkUHJlc2VudCcsXG4gICAgICAnaW9uUG9wb3ZlcldpbGxQcmVzZW50JyxcbiAgICAgICdpb25Qb3BvdmVyV2lsbERpc21pc3MnLFxuICAgICAgJ2lvblBvcG92ZXJEaWREaXNtaXNzJyxcbiAgICAgICdkaWRQcmVzZW50JyxcbiAgICAgICd3aWxsUHJlc2VudCcsXG4gICAgICAnd2lsbERpc21pc3MnLFxuICAgICAgJ2RpZERpc21pc3MnLFxuICAgIF0pO1xuICB9XG59XG4iXX0=